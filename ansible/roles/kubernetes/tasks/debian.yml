---
- name: copy GPG key for Kubernetes
  copy:
    src: "{{ role_path }}/files/etc/apt/import.gpg.d/APT-GPG-KEY-kubernetes"
    dest: "/etc/apt/import.gpg.d/APT-GPG-KEY-kubernetes"
    owner: root
    group: root
    mode: 0644
  when: kubernetes_install_upstream_gpgkey | bool

- name: add kubernetes apt key
  apt_key:
    file: /etc/apt/import.gpg.d/APT-GPG-KEY-kubernetes
  when: kubernetes_install_upstream_gpgkey | bool

- name: copy GPG key for Essential PKS
  copy:
    src: "{{ role_path }}/files/etc/pki/rpm-gpg/RPM-GPG-KEY-essential-pks"
    dest: "/etc/apt/import.gpg.d/APT-GPG-KEY-essential-pks"
    owner: root
    group: root
    mode: 0644
  when: kubernetes_install_essential_pks_gpgkey | bool

- name: add kubernetes apt key
  apt_key:
    file: /etc/apt/import.gpg.d/APT-GPG-KEY-essential-pks
  when: kubernetes_install_essential_pks_gpgkey | bool

- name: add the kubernetes apt repo
  apt_repository:
    repo: "{{ kubernetes_apt_repo_string }}"
    state: present
  register: kubernetes_repository_update

- name: Update repositories cache
  apt:
    update_cache: yes
  when: docker_repository.changed
  register: docker_repository_update
  until: docker_repository_update is success
  retries: 5
  delay: 5

- name: lock kubernetes versions
  copy:
    dest: "/etc/apt/preferences.d/kubernetes"
    content: |
      Package: kubelet
      Pin: version {{kubernetes_version}}*
      Pin-Priority: 1100

      Package: kubeadm
      Pin: version {{kubernetes_version}}*
      Pin-Priority: 1100

      Package: kubectl
      Pin: version {{kubernetes_version}}*
      Pin-Priority: 1100

      Package: kubernetes-cni
      Pin: version {{kubernetes_cni_version}}*
      Pin-Priority: 1100
  when: kubernetes_version is defined

