---

- name: copy kubernetes GPG key
  copy:
    src: "{{ role_path }}/files/etc/pki/rpm-gpg/RPM-GPG-KEY-{{item}}"
    dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-{{item}}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - kubernetes
    - kubernetes-packages
  when: kubernetes_install_upstream_gpgkey | bool

- name: add the kubernetes yum repo key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-{{item}}
  with_items:
    - kubernetes
    - kubernetes-packages
  when: kubernetes_install_upstream_gpgkey | bool

- name: copy Essential PKS GPG key
  copy:
    src: "{{ role_path }}/files/etc/pki/rpm-gpg/RPM-GPG-KEY-essential-pks"
    dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-essential-pks"
    owner: root
    group: root
    mode: 0644
  when: kubernetes_install_essential_pks_gpgkey | bool

- name: add the Essential PKS yum repo key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-essential-pks
  when: kubernetes_install_essential_pks_gpgkey | bool

- name: add the kubernetes yum repo
  yum_repository:
    name: kubernetes
    description: the kubernetes yum repo
    baseurl: "{{ kubernetes_yum_baseurl }}"
    gpgcheck: True
    repo_gpgcheck: True
    gpgkey: "{{ kubernetes_yum_gpgkey }}"

- name: hold kubernetes version
  lineinfile:
    path: "/etc/yum/pluginconf.d/versionlock.list"
    line: "0:{{item}}"
    regexp: "{{item.split('-')[0] }}"
    create: yes
    mode: '0644'
    owner: root
    group: root
  when: kubernetes_version is defined
  with_items:
  - "cri-tools-{{ kubernetes_cri_tools_version | kube_platform_version('RedHat') }}.*"
  - "kubelet-{{ kubernetes_version | kube_platform_version('RedHat') }}.*"
  - "kubeadm-{{ kubernetes_version | kube_platform_version('RedHat') }}.*"
  - "kubectl-{{ kubernetes_version | kube_platform_version('RedHat') }}.*"
  - "kubernetes-cni-{{ kubernetes_cni_version | kube_platform_version('RedHat') }}.*"

