---


- name: update /etc/hosts to include cluster fqdn
  lineinfile:
    dest: /etc/hosts
    line: "{{ kubernetes_common_api_ip }} {{ kubernetes_common_api_fqdn }}"
    state: present
  when: kubernetes_common_manage_etc_hosts and kubernetes_common_api_ip is defined and kubernetes_common_api_fqdn is defined

- name: set kubernetes_node_ip fact
  set_fact:
    kubernetes_node_ip: "{{ hostvars[inventory_hostname]['ansible_'~item]['ipv4']['address'] }}"
  with_items:
    - "{{ kubernetes_common_primary_interface }}"
  when: kubernetes_common_primary_interface is defined

- name: create kubelet config directory
  file:
    dest: /etc/systemd/system/kubelet.service.d
    state: directory

- name: drop extra args kubelet config
  template:
    backup: True
    dest: "/etc/{{ 'default' if ansible_os_family == 'Debian' else 'sysconfig' }}/kubelet"
    src: etc/default/kubelet
  notify:
    - restart kubelet
  when: kubernetes_common_primary_interface is defined or kubernetes_common_kubelet_extra_args is defined or kubernetes_common_kubelet_env_vars is defined

- name: delete old kubelet extra args unit file
  file:
    dest: /etc/systemd/system/kubelet.service.d/09-extra-args.conf
    state: absent
  notify:
    - restart kubelet

- name: ensure firewalld is running
  systemd:
    name: firewalld
    state: started
  when: ansible_os_family == "RedHat"

- name: open kubelet ports
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: True
  with_items:
  - "30000-32767/tcp"
  - "10250-10255/tcp"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: drop kubeadm template
  template:
    src: etc/kubernetes/kubeadm.conf
    dest: /etc/kubernetes/kubeadm.conf

- name: write kubelet configuration
  template:
    dest: /var/lib/kubelet/config.yaml
    src: var/lib/kubelet/config.yaml
  when: kubernetes_common_kubelet_config

- name: flush handlers
  meta: flush_handlers
